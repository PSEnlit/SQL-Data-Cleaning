-- Data cleaning project


SELECT *
FROM PortfolioProject..NashvilleHousing
-- STANDARDISING SALES DATE AND REMOVING TIME

SELECT SaleDate, CONVERT(DATE, SaleDate) as Date_of_Sale
FROM PortfolioProject..NashvilleHousing

--UPDATE NashvilleHousing
--SET SaleDate = CONVERT(DATE, SaleDate)

ALTER TABLE NashvilleHousing
ADD Date_of_Sale DATE;

UPDATE NashvilleHousing
SET Date_of_Sale = CONVERT(DATE, SaleDate)

SELECT Date_of_Sale
FROM PortfolioProject..NashvilleHousing

--ADDRESS DATA : Filing in null addresses from same parcel id

SELECT a.ParcelID, a.PropertyAddress, b.PropertyAddress, b.ParcelID, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject..NashvilleHousing a
JOIN PortfolioProject..NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
	WHERE a.PropertyAddress is null 

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject..NashvilleHousing a
JOIN PortfolioProject..NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
	WHERE a.PropertyAddress is null

SELECT PropertyAddress
FROM PortfolioProject..NashvilleHousing
WHERE PropertyAddress is Null

-- Breaking the Address into Address, City, State

SELECT PropertyAddress
FROM PortfolioProject..NashvilleHousing

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address -- to remove the comma
 , SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as City
FROM PortfolioProject..NashvilleHousing


ALTER TABLE NashvilleHousing
ADD PropertyLineAddress NVARCHAR(255);

UPDATE NashvilleHousing
SET PropertyLineAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE NashvilleHousing
ADD PropertyCityAddress NVARCHAR(255);

UPDATE NashvilleHousing
SET PropertyCityAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

SELECT PropertyLineAddress, PropertyCityAddress
FROM PortfolioProject..NashvilleHousing

-- Dividing Owner Address
SELECT 
PARSENAME(REPLACE(OwnerAddress,',', '.') , 3) as OwnerLineAddress -- to replace, also Parsename works in reverse
 , PARSENAME(REPLACE(OwnerAddress,',', '.' ), 2) as OwnerCityAddress
 , PARSENAME(REPLACE(OwnerAddress,',', '.' ), 1) as OwnerStateAddress
FROM PortfolioProject..NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerLineAddress NVARCHAR(255);

UPDATE NashvilleHousing
SET OwnerLineAddress = PARSENAME(REPLACE(OwnerAddress,',', '.') , 3)

ALTER TABLE NashvilleHousing
ADD OwnerCityAddress NVARCHAR(255);

UPDATE NashvilleHousing
SET OwnerCityAddress = PARSENAME(REPLACE(OwnerAddress,',', '.') , 3)

ALTER TABLE NashvilleHousing
ADD OwnerStateAddress NVARCHAR(255);

UPDATE NashvilleHousing
SET OwnerStateAddress = PARSENAME(REPLACE(OwnerAddress,',', '.') , 3)

SELECT *
FROM PortfolioProject..NashvilleHousing

--Changing Y and N to Yes and No

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM PortfolioProject..NashvilleHousing
GROUP BY SoldAsVacant

SELECT SoldAsVacant
, CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
 ELSE SoldAsVacant
 END
FROM PortfolioProject..NashvilleHousing


UPDATE NashvilleHousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
 ELSE SoldAsVacant
 END


 -- Removing Duplicates
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num 
FROM PortfolioProject..NashvilleHousing

With RowNumCTE AS(
SELECT *,
ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num 
FROM PortfolioProject..NashvilleHousing)
SELECT *
FROM RowNumCTE
Where row_num>1
Order By PropertyAddress

With RowNumCTE AS(
SELECT *,
ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num 
FROM PortfolioProject..NashvilleHousing)
DELETE
FROM RowNumCTE
Where row_num>1

--Deleting unused Column

ALTER TABLE PortfolioProject..NashvilleHousing
DROP COLUMN PropertyAddress, OwnerAddress, SaleDate;

SELECT *
FROM PortfolioProject..NashvilleHousing
